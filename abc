import win32com.client

def convert_to_xlsm(excel_file, new_excel_file):
    # Create an instance of Excel
    excel = win32com.client.Dispatch("Excel.Application")
    
    # Make Excel visible (optional)
    excel.Visible = True
    
    # Open the Excel workbook
    workbook = excel.Workbooks.Open(excel_file)
    
    # Save the workbook as a macro-enabled workbook (.xlsm)
    workbook.SaveAs(new_excel_file, FileFormat=52)  # 52 is the file format code for .xlsm
    
    # Close the workbook
    workbook.Close(SaveChanges=True)
    
    # Quit Excel
    excel.Quit()

def add_vba_module(excel_file, vba_code):
    # Create an instance of Excel
    excel = win32com.client.Dispatch("Excel.Application")
    
    # Make Excel visible (optional)
    excel.Visible = True
    
    # Open the Excel workbook
    workbook = excel.Workbooks.Open(excel_file)
    
    # Get the VBProject
    vb_project = workbook.VBProject
    
    # Add a new module
    vb_module = vb_project.VBComponents.Add(1)  # 1 refers to a standard module
    
    # Insert VBA code into the module
    vb_module.CodeModule.AddFromString(vba_code)
    
    # Save and close the workbook
    workbook.Close(SaveChanges=True)
    
    # Quit Excel
    excel.Quit()

if __name__ == "__main__":
    # Path to the original Excel file (.xlsx)
    excel_file_xlsx = r"C:\Users\YourUsername\Documents\example.xlsx"
    
    # Path to the new Excel file (.xlsm)
    excel_file_xlsm = r"C:\Users\YourUsername\Documents\example.xlsm"
    
    # VBA code to be added
    vba_code = """
    Sub MyNewMacro()
        MsgBox "Hello from the new VBA code!"
    End Sub
    """
    
    # Convert the .xlsx file to .xlsm
    convert_to_xlsm(excel_file_xlsx, excel_file_xlsm)
    
    # Add VBA module and insert code
    add_vba_module(excel_file_xlsm, vba_code)
